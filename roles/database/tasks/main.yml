---

# These tasks often use "ignore_errors: yes" rather than using "INSERT IGNORE" or 
# similar MySQL syntax in order to preserve idempotency. More specifcally, in the
# 'user' block, I don't use "INSERT IGNORE" because then password would be changed
# whenever a connection is added.

- name: register priv_key var
  shell: cat /root/.ssh/id_rsa
  register: priv_key
  ignore_errors: yes
  tags: vars

- tags: user
  block:
  - name: Add new user
    shell: echo "SET @salt = UNHEX(SHA2(UUID(), 256)); INSERT INTO guacamole_user (username, password_salt, password_hash) VALUES ('{{ atmo_user }}', @salt, UNHEX(SHA2(CONCAT('{{ pass_add }}', HEX(@salt)), 256)));" | mysql -u root {{ database_name }}
    ignore_errors: yes
  - name: Find and register the user_id of the user
    shell: echo "SELECT user_id FROM guacamole_user WHERE username = '{{ atmo_user }}';" | mysql -u root salsa | grep -v user_id
    register: user_id
  - name: Allows the user to change their own password
    shell: echo "INSERT IGNORE INTO guacamole_user_permission VALUES ({{ user_id.stdout }}, {{ user_id.stdout }}, 'UPDATE')" | mysql -u root {{ database_name }}

- tags: vnc
  block:
  - name: Add new vnc connection
    shell: echo "INSERT INTO guacamole_connection (connection_name, protocol) VALUES ('{{ connection_add.name }}', 'vnc');" | mysql -u root {{ database_name }}
    register: vnc_add_out
    ignore_errors: yes
  - name: Find and register the connection_id of new vnc connection
    shell: echo "SELECT connection_id FROM guacamole_connection;" | mysql -u root salsa | awk END{print}
    register: vnc_conn_id
  - name: Add parameters to the new vnc connection
    shell: echo "INSERT IGNORE INTO guacamole_connection_parameter VALUES ({{ vnc_conn_id.stdout }}, '{{ item.param }}', '{{ item.value }}');" | mysql -u root {{ database_name }}
    with_items: "{{ connection_add.vnc_param_list }}"
    when: vnc_add_out.rc == 0

- tags: ssh
  block:
  - name: Add new ssh connection
    shell: echo "INSERT INTO guacamole_connection (connection_name, protocol) VALUES ('{{ connection_add.name }}-SSH', 'ssh');" | mysql -u root {{ database_name }}    
    register: ssh_add_out
    ignore_errors: yes
  - name: Find and register the connection_id of new ssh connection
    shell: echo "SELECT connection_id FROM guacamole_connection;" | mysql -u root salsa | awk END{print}
    register: ssh_conn_id
  - name: Add parameters to the new ssh connection
    shell: echo "INSERT IGNORE INTO guacamole_connection_parameter VALUES ({{ ssh_conn_id.stdout }}, '{{ item.param }}', '{{ item.value }}');" | mysql -u root {{ database_name }}
    with_items: "{{ connection_add.ssh_param_list }}"
    when: ssh_add_out.rc == 0
  - name: Add private-key parameter to the database
    shell: echo "INSERT IGNORE INTO guacamole_connection_parameter VALUES ({{ ssh_conn_id.stdout }}, 'private-key', '{{ priv_key.stdout }}');" | mysql -u root {{ database_name }}
    when: ssh_add_out.rc == 0

- name: Allow the new user to access the new connections
  shell: echo "INSERT INTO guacamole_connection_permission VALUES ({{ user_id.stdout }}, '{{ item }}', 'READ')" | mysql -u root salsa
  with_items: [ '{{ ssh_conn_id.stdout }}', '{{ vnc_conn_id.stdout }}' ]
  when: (ssh_add_out.rc == 0) and (vnc_add_out.rc == 0)
  tags: permissions

- tags: cron
  block:
  - name: Add shell script to manage connections
    copy: src="files/guacamole.sh" dest=/etc/cron.d mode="0744"
  - name: Add script to crontab
    cron: job="/etc/cron.d/guacamole.sh" minute="*/5" state=present name="Removes inactive Guacamole connections"
